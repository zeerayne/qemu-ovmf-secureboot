name: End to end testing of script

on:
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  build-and-run:
    runs-on: ubuntu-latest
    env:
      DOCKER_IMAGE_TAG: "qemu-ovmf-secureboot:latest"

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Build docker image
      run: docker build -t $DOCKER_IMAGE_TAG .

    - name: Run full flow without oem-string
      run: |
        docker run --rm $DOCKER_IMAGE_TAG ovmf-vars-generator --kernel-path=vmlinuz --print-output output.vars

    - name: Create cert for oem-string
      run: |
        openssl req -x509 -newkey rsa:2048 -nodes -subj "/C=XX/ST=Test/L=EnrollTest/O=Xxx/CN=www.example.com" -outform PEM -keyout PkKek1.private.key -out PkKek1.pem
        sed -e 's/^-----BEGIN CERTIFICATE-----$/4e32566d-8e9e-4f52-81d3-5bb9715f9727:/' -e '/^-----END CERTIFICATE-----$/d' PkKek1.pem > PkKek1.oemstr
        mkdir -m 666 vars

    - name: Run full flow with oem-string
      run: |
        docker run --rm $DOCKER_IMAGE_TAG ovmf-vars-generator --verbose --print-output --kernel-path vmlinuz output.vars --oem-string "$(< PkKek1.oemstr)"

    - name: Run enrollment-only with oem-string
      run: |
        docker run -v ./vars:/app/vars --rm $DOCKER_IMAGE_TAG ovmf-vars-generator --verbose --print-output --kernel-path vmlinuz vars/outputsplit.vars --skip-testing --oem-string "$(< PkKek1.oemstr)"

    - name: Run testing-only with oem-string
      run: |
        docker run -v ./vars:/app/vars --rm $DOCKER_IMAGE_TAG ovmf-vars-generator --verbose --print-output --kernel-path vmlinuz vars/outputsplit.vars --skip-enrollment
